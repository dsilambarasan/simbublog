<?php

function required_fields_menu() {
  $item = array();
  $item['admin/config/content/required_fields'] = array(
    'title' => 'Required Fields',
    'description' => 'Make the fields as required',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('required_fields_configuration'),
    'access arguments' => array('administer')
  );
  $item['admin/content/required_fields/field/update'] = array(
    'title' => 'Updating the field',
    'description' => 'Update the field',
    'page callback' => 'required_fields_ajax_callback',
    'access arguments' => array('administer')
  );
  return $item;
}

function required_fields_configuration($form, $form_state) {

  $header = array(
   'Fields' => 'Fields',
   'Content Type' => 'Content Type',
   'action' => ''
);

  $fields = array_keys(field_info_fields());

  $content_types = array_keys(node_type_get_types());
  array_unshift($content_types, 'All');
  $ctypes = array_combine($content_types, $content_types);
  $i = 0;
  $changed_value = '';
  $changed_key = '';
  if (isset($form_state['values'])) {
    $changed_value = current($form_state['values']);
    $changed_key = key($form_state['values']);
  }
  foreach ($fields as $key => $field) {
    $form[$field] = array(
      '#type' => 'fieldset',
      '#title' => $field,
      '#collapsible' => TRUE,
      '#collapsed' => FALSE
    );
    $i++;
    foreach ($ctypes as $keytype => $valuetype) {
      $form[$field]['type_' . $i . '_' . $keytype] = array(
        '#markup' => $valuetype,
        '#attributes' => array('class' => array('type')),
      );
      if ($changed_key == 'action_' . $i . '_' . $keytype) {
        $changed_value = $changed_value=='Mark'?'Unmark':'Mark';
      }
      else $changed_value = 'Mark';
      //echo $changed_value;
      $form[$field]['action_' . $i . '_' . $keytype] = array(
        '#type' => 'button',
        '#name' => 'action_' . $i . '_' . $keytype,
        '#limit_validation_errors' => array(),
        '#executes_submit_callback' => FALSE,
        '#value' => 'Mark',
        '#attributes' => array('class' => array('mark')),
        '#prefix' => '<div id="markbutton_' . $i . '_' . $keytype . '">',
        '#suffix' => '</div>',
        '#ajax' => array(
          'callback' => 'required_fields_ajax_callback',
          'wrapper' => 'markbutton_' . $i . '_' . $keytype,
          'method' => 'replace',
          'effect' => 'fade',
          'attributes' => array('field' => $field, 'ctype' => $valuetype, 'parent' => 'action_' . $i . '_' . $keytype, 'value' => 'Mark'),
        ),
      );
    }
  }
  return $form;
}

function required_fields_ajax_callback($form, &$form_state) {
  $field = $form_state['triggering_element']['#ajax']['attributes']['parent'];
  $fieldset = $form_state['triggering_element']['#ajax']['attributes']['field'];
  //$form[$fieldset][$field]['#value'] = $form[$fieldset][$field]['#value']=='Mark'?'Unmark':'Mark';
  print_r($form_state['input']);
  if ($form[$fieldset][$field]['#value'] == 'Mark') {
    //echo $form[$fieldset][$field]['#value']; exit;
    $form[$fieldset][$field]['#ajax']['attributes']['value'] = $form[$fieldset][$field]['#value'] = 'Unmark';
  } else {
    //echo $form[$fieldset][$field]['#value']; exit;
    $form[$fieldset][$field]['#ajax']['attributes']['value'] = $form[$fieldset][$field]['#value'] = 'Mark';
  }
  return $form[$fieldset][$field];
}

function required_fields_configuration_validate($form, &$form_state) {
}

function required_fields_configuration_submit($form, &$form_state) {
  print_r($form_state['values']); exit;
}

